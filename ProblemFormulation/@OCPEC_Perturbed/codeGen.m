function codeGen(OCPEC)
%codeGen
%   Detailed explanation goes here

%% organize Dim struct
OCPEC.Dim.LAMBDA = OCPEC.Dim.sigma + OCPEC.Dim.eta + OCPEC.Dim.lambda + OCPEC.Dim.gamma;
OCPEC.Dim.Node = cumsum([OCPEC.Dim.sigma, OCPEC.Dim.eta, OCPEC.Dim.lambda, OCPEC.Dim.gamma,...
    OCPEC.Dim.tau, OCPEC.Dim.x, OCPEC.Dim.p, OCPEC.Dim.w]);

OCPEC.Dim.Y = OCPEC.Dim.LAMBDA + OCPEC.Dim.Z;

%% Generate code files about L
% compute jacobian
LStau = jacobian(OCPEC.LS, OCPEC.tau);
LSx   = jacobian(OCPEC.LS, OCPEC.x);
LSp   = jacobian(OCPEC.LS, OCPEC.p);
LSw   = jacobian(OCPEC.LS, OCPEC.w);

% Generate code files about the stage cost function and its jacobians
disp('Generate code files about stage cost function...');
varList_cost = {OCPEC.tau, OCPEC.x, OCPEC.p, OCPEC.w,...
                OCPEC.symVar.xRef, OCPEC.symVar.tauRef, OCPEC.symVar.xWeight, OCPEC.symVar.tauWeight};
matlabFunction(OCPEC.LS,...
    'File','./autoGen_CodeFiles/autoGen_LS.m',...
    'Vars',varList_cost,...   
    'Outputs',{'LS'},...
    'Optimize',OCPEC.codeOptimize);
matlabFunction(LStau, LSx, LSp, LSw,...
    'File','./autoGen_CodeFiles/autoGen_LStau_LSx_LSp_LSw.m',...
    'Vars',varList_cost,...   
    'Outputs',{'LStau','LSx','LSp', 'LSw'},...
    'Optimize',OCPEC.codeOptimize);

% compute jacobian
LTtau = jacobian(OCPEC.LT, OCPEC.tau);
LTx   = jacobian(OCPEC.LT, OCPEC.x);
LTp   = jacobian(OCPEC.LT, OCPEC.p);
LTw   = jacobian(OCPEC.LT, OCPEC.w);

% Generate code files about the terminal cost function and its jacobians
disp('Generate code files about terminal cost function...');
varList_cost_Terminal = {OCPEC.tau, OCPEC.x, OCPEC.p, OCPEC.w,...
                         OCPEC.symVar.xRef, OCPEC.symVar.tauRef, OCPEC.symVar.xWeight, OCPEC.symVar.tauWeight};
matlabFunction(OCPEC.LT,...
    'File','./autoGen_CodeFiles/autoGen_LT.m',...
    'Vars',varList_cost_Terminal,...   
    'Outputs',{'LT'},...
    'Optimize',OCPEC.codeOptimize);
matlabFunction(LTtau, LTx, LTp, LTw,...
    'File','./autoGen_CodeFiles/autoGen_LTtau_LTx_LTp_LTw.m',...
    'Vars',varList_cost_Terminal,...   
    'Outputs',{'LTtau','LTx','LTp', 'LTw'},...
    'Optimize',OCPEC.codeOptimize);

%% Generate code files about G
% compute jacobian
Gtau = jacobian(OCPEC.G, OCPEC.tau);
Gx   = jacobian(OCPEC.G, OCPEC.x);
Gp   = jacobian(OCPEC.G, OCPEC.p);
% Generate code files about the inequality constraints and its jacobians
disp('Generate code files about inequality constraints...');
varList_G = {OCPEC.tau, OCPEC.x, OCPEC.p};
matlabFunction(OCPEC.G,...
    'File','./autoGen_CodeFiles/autoGen_G.m',...
    'Vars',varList_G,...   
    'Outputs',{'G'},...
    'Optimize',OCPEC.codeOptimize);
matlabFunction(Gtau, Gx, Gp,...
    'File','./autoGen_CodeFiles/autoGen_Gtau_Gx_Gp.m',...
    'Vars',varList_G,...   
    'Outputs',{'Gtau','Gx','Gp'},...
    'Optimize',OCPEC.codeOptimize);

%% Generate code files about C
% compute jacobian
Ctau = jacobian(OCPEC.C, OCPEC.tau);
Cx   = jacobian(OCPEC.C, OCPEC.x);
Cp   = jacobian(OCPEC.C, OCPEC.p);
Cw   = jacobian(OCPEC.C, OCPEC.w);
% Generate code files about the equality constraint and its jacobian
disp('Generate code files about equality constraints...');
varList_C = {OCPEC.tau, OCPEC.x, OCPEC.p, OCPEC.w};
matlabFunction(OCPEC.C,...
    'file','./autoGen_CodeFiles/autoGen_C.m',...
    'vars',varList_C,...   
    'outputs',{'C'},...
    'Optimize',OCPEC.codeOptimize);
matlabFunction(Ctau, Cx, Cp, Cw,...
    'file','./autoGen_CodeFiles/autoGen_Ctau_Cx_Cp_Cw.m',...
    'vars',varList_C,...   
    'outputs',{'Ctau', 'Cx', 'Cp', 'Cw'},...
    'Optimize',OCPEC.codeOptimize);

%% Generate code files about PHI
% compute jacobian
PHIp   = jacobian(OCPEC.PHI, OCPEC.p);
PHIw   = jacobian(OCPEC.PHI, OCPEC.w);
% generate code files about the equilibrium dynamics and related jacobian
disp('Generate code files about equilibrium dynamics constraints...')
varList_PHI = {OCPEC.p, OCPEC.w, OCPEC.symVar.s};
matlabFunction(OCPEC.PHI,...
    'file','./autoGen_CodeFiles/autoGen_PHI.m',...
    'vars',varList_PHI,...
    'outputs',{'PHI'},...
    'Optimize',OCPEC.codeOptimize);
matlabFunction(PHIp, PHIw,...
    'file','./autoGen_CodeFiles/autoGen_PHIp_PHIw.m',...
    'vars',varList_PHI,...
    'outputs',{'PHIp', 'PHIw'},...
    'Optimize',OCPEC.codeOptimize);

%% Generate code files about LFRP
% compute jacobian
LFRPtau = jacobian(OCPEC.LFRP, OCPEC.tau);
LFRPx   = jacobian(OCPEC.LFRP, OCPEC.x);
LFRPp   = jacobian(OCPEC.LFRP, OCPEC.p);
LFRPw   = jacobian(OCPEC.LFRP, OCPEC.w);

% Generate code files about the stage cost function and its jacobians
disp('Generate code files about stage cost function in FRP...');
varList_FRP = {OCPEC.tau, OCPEC.x, OCPEC.p, OCPEC.w,...
               OCPEC.symVar.ZRef, OCPEC.symVar.ZWeight};
matlabFunction(OCPEC.LFRP,...
    'File','./autoGen_CodeFiles/autoGen_LFRP.m',...
    'Vars',varList_FRP,...   
    'Outputs',{'LFRP'},...
    'Optimize',OCPEC.codeOptimize);
matlabFunction(LFRPtau, LFRPx, LFRPp, LFRPw,...
    'File','./autoGen_CodeFiles/autoGen_LFRPtau_LFRPx_LFRPp_LFRPw.m',...
    'Vars',varList_FRP,...   
    'Outputs',{'LFRPtau','LFRPx','LFRPp', 'LFRPw'},...
    'Optimize',OCPEC.codeOptimize);

disp('Done!')

end

